// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ReleasePage2 correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReleasePage2
    error={
      Object {
        "message": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <CardHeader
          tag="div"
        >
          <h4>
            <strong>
              Press Release - 2 of 3
            </strong>
          </h4>
        </CardHeader>,
        <CardBody
          tag="div"
        >
          <Form
            tag="form"
          >
            <Price
              hasError={false}
              label="Regular Price*"
            />
            <PromoTypes
              hasError={false}
              label="Select Promotion Type*"
            />
            <DatesPicker
              label="Dates for promotion"
            />
            
            <Button
              color="basic"
              size="sm"
              tag="button"
            >
              Go Back
            </Button>
            <Button
              color="primary"
              size="sm"
              tag="button"
              type="submit"
              value="Submit"
            >
              Next Section
            </Button>
          </Form>
        </CardBody>,
      ],
      "className": "animated fadeIn",
      "tag": "div",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <h4>
            <strong>
              Press Release - 2 of 3
            </strong>
          </h4>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <strong>
              Press Release - 2 of 3
            </strong>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Press Release - 2 of 3",
            },
            "ref": null,
            "rendered": "Press Release - 2 of 3",
            "type": "strong",
          },
          "type": "h4",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Form
            tag="form"
          >
            <Price
              hasError={false}
              label="Regular Price*"
            />
            <PromoTypes
              hasError={false}
              label="Select Promotion Type*"
            />
            <DatesPicker
              label="Dates for promotion"
            />
            
            <Button
              color="basic"
              size="sm"
              tag="button"
            >
              Go Back
            </Button>
            <Button
              color="primary"
              size="sm"
              tag="button"
              type="submit"
              value="Submit"
            >
              Next Section
            </Button>
          </Form>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Price
                hasError={false}
                label="Regular Price*"
              />,
              <PromoTypes
                hasError={false}
                label="Select Promotion Type*"
              />,
              <DatesPicker
                label="Dates for promotion"
              />,
              "",
              <Button
                color="basic"
                size="sm"
                tag="button"
              >
                Go Back
              </Button>,
              <Button
                color="primary"
                size="sm"
                tag="button"
                type="submit"
                value="Submit"
              >
                Next Section
              </Button>,
            ],
            "onSubmit": undefined,
            "tag": "form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "errorMessage": undefined,
                "hasError": false,
                "label": "Regular Price*",
                "onPriceChange": undefined,
                "price": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "errorMessage": undefined,
                "hasError": false,
                "label": "Select Promotion Type*",
                "onChange": undefined,
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "endDate": undefined,
                "focusedInput": undefined,
                "label": "Dates for promotion",
                "onDatesChange": undefined,
                "onFocusChange": undefined,
                "startDate": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Go Back",
                "color": "basic",
                "onClick": undefined,
                "size": "sm",
                "tag": "button",
              },
              "ref": null,
              "rendered": "Go Back",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Next Section",
                "color": "primary",
                "size": "sm",
                "tag": "button",
                "type": "submit",
                "value": "Submit",
              },
              "ref": null,
              "rendered": "Next Section",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <CardHeader
            tag="div"
          >
            <h4>
              <strong>
                Press Release - 2 of 3
              </strong>
            </h4>
          </CardHeader>,
          <CardBody
            tag="div"
          >
            <Form
              tag="form"
            >
              <Price
                hasError={false}
                label="Regular Price*"
              />
              <PromoTypes
                hasError={false}
                label="Select Promotion Type*"
              />
              <DatesPicker
                label="Dates for promotion"
              />
              
              <Button
                color="basic"
                size="sm"
                tag="button"
              >
                Go Back
              </Button>
              <Button
                color="primary"
                size="sm"
                tag="button"
                type="submit"
                value="Submit"
              >
                Next Section
              </Button>
            </Form>
          </CardBody>,
        ],
        "className": "animated fadeIn",
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h4>
              <strong>
                Press Release - 2 of 3
              </strong>
            </h4>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <strong>
                Press Release - 2 of 3
              </strong>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Press Release - 2 of 3",
              },
              "ref": null,
              "rendered": "Press Release - 2 of 3",
              "type": "strong",
            },
            "type": "h4",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Form
              tag="form"
            >
              <Price
                hasError={false}
                label="Regular Price*"
              />
              <PromoTypes
                hasError={false}
                label="Select Promotion Type*"
              />
              <DatesPicker
                label="Dates for promotion"
              />
              
              <Button
                color="basic"
                size="sm"
                tag="button"
              >
                Go Back
              </Button>
              <Button
                color="primary"
                size="sm"
                tag="button"
                type="submit"
                value="Submit"
              >
                Next Section
              </Button>
            </Form>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Price
                  hasError={false}
                  label="Regular Price*"
                />,
                <PromoTypes
                  hasError={false}
                  label="Select Promotion Type*"
                />,
                <DatesPicker
                  label="Dates for promotion"
                />,
                "",
                <Button
                  color="basic"
                  size="sm"
                  tag="button"
                >
                  Go Back
                </Button>,
                <Button
                  color="primary"
                  size="sm"
                  tag="button"
                  type="submit"
                  value="Submit"
                >
                  Next Section
                </Button>,
              ],
              "onSubmit": undefined,
              "tag": "form",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "errorMessage": undefined,
                  "hasError": false,
                  "label": "Regular Price*",
                  "onPriceChange": undefined,
                  "price": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "errorMessage": undefined,
                  "hasError": false,
                  "label": "Select Promotion Type*",
                  "onChange": undefined,
                  "value": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "endDate": undefined,
                  "focusedInput": undefined,
                  "label": "Dates for promotion",
                  "onDatesChange": undefined,
                  "onFocusChange": undefined,
                  "startDate": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Go Back",
                  "color": "basic",
                  "onClick": undefined,
                  "size": "sm",
                  "tag": "button",
                },
                "ref": null,
                "rendered": "Go Back",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Next Section",
                  "color": "primary",
                  "size": "sm",
                  "tag": "button",
                  "type": "submit",
                  "value": "Submit",
                },
                "ref": null,
                "rendered": "Next Section",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
